package com.nashlincoln.blink.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.nashlincoln.blink.model.AttributeType;
import com.nashlincoln.blink.model.Attribute;
import com.nashlincoln.blink.model.DeviceType;
import com.nashlincoln.blink.model.Device;
import com.nashlincoln.blink.model.Group;
import com.nashlincoln.blink.model.GroupDevice;
import com.nashlincoln.blink.model.Scene;
import com.nashlincoln.blink.model.SceneDevice;
import com.nashlincoln.blink.model.Timer;

import com.nashlincoln.blink.model.AttributeTypeDao;
import com.nashlincoln.blink.model.AttributeDao;
import com.nashlincoln.blink.model.DeviceTypeDao;
import com.nashlincoln.blink.model.DeviceDao;
import com.nashlincoln.blink.model.GroupDao;
import com.nashlincoln.blink.model.GroupDeviceDao;
import com.nashlincoln.blink.model.SceneDao;
import com.nashlincoln.blink.model.SceneDeviceDao;
import com.nashlincoln.blink.model.TimerDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig attributeTypeDaoConfig;
    private final DaoConfig attributeDaoConfig;
    private final DaoConfig deviceTypeDaoConfig;
    private final DaoConfig deviceDaoConfig;
    private final DaoConfig groupDaoConfig;
    private final DaoConfig groupDeviceDaoConfig;
    private final DaoConfig sceneDaoConfig;
    private final DaoConfig sceneDeviceDaoConfig;
    private final DaoConfig timerDaoConfig;

    private final AttributeTypeDao attributeTypeDao;
    private final AttributeDao attributeDao;
    private final DeviceTypeDao deviceTypeDao;
    private final DeviceDao deviceDao;
    private final GroupDao groupDao;
    private final GroupDeviceDao groupDeviceDao;
    private final SceneDao sceneDao;
    private final SceneDeviceDao sceneDeviceDao;
    private final TimerDao timerDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        attributeTypeDaoConfig = daoConfigMap.get(AttributeTypeDao.class).clone();
        attributeTypeDaoConfig.initIdentityScope(type);

        attributeDaoConfig = daoConfigMap.get(AttributeDao.class).clone();
        attributeDaoConfig.initIdentityScope(type);

        deviceTypeDaoConfig = daoConfigMap.get(DeviceTypeDao.class).clone();
        deviceTypeDaoConfig.initIdentityScope(type);

        deviceDaoConfig = daoConfigMap.get(DeviceDao.class).clone();
        deviceDaoConfig.initIdentityScope(type);

        groupDaoConfig = daoConfigMap.get(GroupDao.class).clone();
        groupDaoConfig.initIdentityScope(type);

        groupDeviceDaoConfig = daoConfigMap.get(GroupDeviceDao.class).clone();
        groupDeviceDaoConfig.initIdentityScope(type);

        sceneDaoConfig = daoConfigMap.get(SceneDao.class).clone();
        sceneDaoConfig.initIdentityScope(type);

        sceneDeviceDaoConfig = daoConfigMap.get(SceneDeviceDao.class).clone();
        sceneDeviceDaoConfig.initIdentityScope(type);

        timerDaoConfig = daoConfigMap.get(TimerDao.class).clone();
        timerDaoConfig.initIdentityScope(type);

        attributeTypeDao = new AttributeTypeDao(attributeTypeDaoConfig, this);
        attributeDao = new AttributeDao(attributeDaoConfig, this);
        deviceTypeDao = new DeviceTypeDao(deviceTypeDaoConfig, this);
        deviceDao = new DeviceDao(deviceDaoConfig, this);
        groupDao = new GroupDao(groupDaoConfig, this);
        groupDeviceDao = new GroupDeviceDao(groupDeviceDaoConfig, this);
        sceneDao = new SceneDao(sceneDaoConfig, this);
        sceneDeviceDao = new SceneDeviceDao(sceneDeviceDaoConfig, this);
        timerDao = new TimerDao(timerDaoConfig, this);

        registerDao(AttributeType.class, attributeTypeDao);
        registerDao(Attribute.class, attributeDao);
        registerDao(DeviceType.class, deviceTypeDao);
        registerDao(Device.class, deviceDao);
        registerDao(Group.class, groupDao);
        registerDao(GroupDevice.class, groupDeviceDao);
        registerDao(Scene.class, sceneDao);
        registerDao(SceneDevice.class, sceneDeviceDao);
        registerDao(Timer.class, timerDao);
    }
    
    public void clear() {
        attributeTypeDaoConfig.getIdentityScope().clear();
        attributeDaoConfig.getIdentityScope().clear();
        deviceTypeDaoConfig.getIdentityScope().clear();
        deviceDaoConfig.getIdentityScope().clear();
        groupDaoConfig.getIdentityScope().clear();
        groupDeviceDaoConfig.getIdentityScope().clear();
        sceneDaoConfig.getIdentityScope().clear();
        sceneDeviceDaoConfig.getIdentityScope().clear();
        timerDaoConfig.getIdentityScope().clear();
    }

    public AttributeTypeDao getAttributeTypeDao() {
        return attributeTypeDao;
    }

    public AttributeDao getAttributeDao() {
        return attributeDao;
    }

    public DeviceTypeDao getDeviceTypeDao() {
        return deviceTypeDao;
    }

    public DeviceDao getDeviceDao() {
        return deviceDao;
    }

    public GroupDao getGroupDao() {
        return groupDao;
    }

    public GroupDeviceDao getGroupDeviceDao() {
        return groupDeviceDao;
    }

    public SceneDao getSceneDao() {
        return sceneDao;
    }

    public SceneDeviceDao getSceneDeviceDao() {
        return sceneDeviceDao;
    }

    public TimerDao getTimerDao() {
        return timerDao;
    }

}
